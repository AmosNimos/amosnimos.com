body {
    background-color: #333333;
    font-family: Arial, sans-serif;
}

/* Headers */
h1, h2, h3 {
    color: #ffff99;
    text-align: center;
    margin: 0.5em 0;
}

/* Skill container styling */
.skill {
    background: linear-gradient(to bottom, #445566, #223344);
    margin: 0.3em;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.6);
    color: #ddeeff;
    text-shadow: 0 3px 3px rgba(0, 0, 0, 0.9);
    height: auto; /* Ensures height adapts to content */
}

/* Skill header container */
.SkillHeader {
    display: flex;
    align-items: center; /* Vertically center items in the row */
    justify-content: space-between;
    margin-bottom: 0.5em;
}

/* Each column in SkillHeader */
.SkillHeader .col {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0.5em;
    width: 30%;
    min-width:200px;
}

/* Each column in SkillHeader */
.SkillHeader .mid {
    display: flex;
    align-items: center;
    justify-content: left;
    margin: 0.5em;
    width: 30%;
    white-space: nowrap;     /* Prevents the text from wrapping */
    min-width: fit-content;  /* Sets the minimum width to the button's text width */
}

/* Button styling */
.nav-button {
    height: 40px;
    padding: 5px 10px;
    background-color: #e61c1c;
    background: linear-gradient(to bottom, #e61c1c, #8f0000);
    color: white;
    //border: none;
    border: 0.5em groove #AA0000;    
    border-radius: 0.2em;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
    margin: 0;
    width: 100%;
    //border: 0.2em solid #332211;
    margin-left:0.2em;
    margin-right:0.2em;
    font-size: auto; /* Responsive font size based on viewport width */
    white-space: nowrap;     /* Prevents the text from wrapping */
    min-width: fit-content;  /* Sets the minimum width to the button's text width */
}

button {
    all: unset;          /* Removes default button styles */
    //display: inline-block;
    //cursor: pointer;     /* Keeps the pointer cursor */
}


.nav-button:hover {
    background-color: #ad0000;
    background: linear-gradient(to bottom, #f04d4d, #d41e1e);
}

/* Icon styling - square and consistent */
.SkillIcon {
    background-color:#111122;
    width: 40px;
    height: 40px;
    margin-right: 10px;
    //clip-path: inset(7px 7px 7px 7px); /* Top, Right, Bottom, Left */
    border: 0.3em ridge #444455;
    border-radius: 10px;
    padding:-2px;
    //border-style: ridge;
}


/* Progress container styling */
.progress-container {
    width: 100%;
    //height: 40px;
    background: linear-gradient(to bottom, #444, #222);
    border-radius: 5px;
    display: flex;
    align-items: center;
    padding: 0;
    margin: 0;
    overflow: hidden;        /* Hides any overflowed content */
}

/* Progress bar styling */
.progress-bar {
    width: 0;  /* Progress bar starts at 0 width */
    text-align: center;
    line-height: 30px;
    color: white;
    border-radius: 5px;
    background: linear-gradient(to bottom, #d700ff, #4b0082);
}

.skill.coolDown .progress-bar {
    background: linear-gradient(to bottom, #ff0000, #8b0000); /* Red gradient */
}

.health-bar {
    width: 0;  /* Progress bar starts at 0 width */
    height: 100%;  /* Fill the height of the container */
    text-align: center;
    line-height: 40px;
    color: white;
    border-radius: 5px;
    background: linear-gradient(to bottom, #089336, #013334); /* Forest green to a darker, bluish green */
    //background: linear-gradient(to bottom, #00ff00, #006400); /* Green gradient */
}

/* Responsive font size for skill name */
.SkillHeader .col h3 {
    margin: 0;
    font-size: 1.5vw; /* Responsive font size based on viewport width */
    border: 0.2em groove #444455;
}

.col{
    overflow: hidden;      /* Hide overflow */
    text-overflow: ellipsis; /* Add "..." to indicate overflow (if using single-line truncation) */
    white-space: nowrap;     /* Prevents the text from wrapping */
    min-width: fit-content;  /* Sets the minimum width to the button's text width */
}

.mid {
    word-wrap: break-word;    /* Allows long words to break and wrap onto the next line */
    overflow-wrap: break-word;/* Standard property for breaking long words */
    white-space: normal;      /* Allows text to wrap naturally */
    height: 40px;
    min-width:30%;
}

/* Disabled button style */
button:disabled {
    background-color: #888888;
    cursor: not-allowed;
    opacity: 0.6;
}

/* Animation for skills */
.animate {
    opacity: 0;  /* Start with the skill hidden */
    transform: translateY(-50px);  /* Start above its final position */
    animation-name: dropAndFlash;   /* Apply the animation */
    animation-duration: 0.6s;         /* Adjust duration as needed */
    animation-fill-mode: forwards; /* Ensure the final state persists */
}

.animate-level {
    transform: translateY(-10px);  /* Start above its final position */
    animation-name: Flash;   /* Apply the animation */
    animation-duration: 0.6s;         /* Adjust duration as needed */
    animation-fill-mode: forwards; /* Ensure the final state persists */
}

@keyframes Flash {
    0% {
        text-shadow: 0 0 10px rgba(0, 255, 0, 0.8), 0 0 20px rgba(0, 255, 0, 0.6);
        transform: translateY(-10px) scale(1.5);  /* Start slightly above and slightly bigger */
        color:#00FF00;
    }
    25% {
        text-shadow: 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #fff, 0 0 50px #fff, 0 0 60px #fff, 0 0 70px #fff, 0 0 80px 
        transform: translateY(-5px) scale(1.2);  /* Settle into place with normal size */
        color:#FFFFFF;
    }
    100% {
        transform: translateY(0) scale(1);  /* Final position, no size change */
        color: #ffff99;
    }
}


@keyframes dropAndFlash {
    0% {
        transform: translateY(-50px) scale(1.1);  /* Start slightly above and slightly bigger */
        opacity: 0;  /* Start invisible */
        box-shadow: 0 14px 15px rgba(0, 0, 0, 0.9);  /* Intense shadow */
        background: linear-gradient(to bottom, #66888A, #335566);  /* Lighter gradient */
    }
    25% {
        opacity: 1;  /* Fade in */
        transform: translateY(0) scale(1);  /* Settle into place with normal size */
        box-shadow: 0 9px 15px rgba(0, 0, 0, 0.7);  /* Less intense shadow */
        background: linear-gradient(to bottom, #55778A, #224455);  /* Lighter gradient */
    }
    100% {
        opacity: 1;
        transform: translateY(0) scale(1);  /* Final position, no size change */
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.6);  /* Soft shadow when settled */
        background: #ffffff; /* Final background */
        background: linear-gradient(to bottom, #445566, #223344);
    }
}

    
/* Notification Box Container */
#notification-box {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: linear-gradient(to bottom, rgba(255, 0, 0, 0.8), rgba(128, 0, 0, 0.8)); /* Red gradient */
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.6);
    color: #fff;
    font-size: 1.5em;
    font-weight: bold;
    text-align: center;
    max-width: 80%;
    z-index: 1000;
    opacity: 1;
    transition: opacity 0.3s ease, box-shadow 0.3s ease;
    border: 2px groove #ff0000; /* Red border */
    animation: glow 1.5s ease-in-out infinite; /* Glowing border animation */
}

/* Glowing Border Animation */
@keyframes glow {
    0% {
        box-shadow: 0 0 10px rgba(255, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.6);
    }
    50% {
        box-shadow: 0 0 20px rgba(255, 0, 0, 1), 0 0 30px rgba(255, 0, 0, 0.8);
    }
    100% {
        box-shadow: 0 0 10px rgba(255, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.6);
    }
}

/* Hidden State */
.hidden {
    display: none;
}

/* Notification Content */
.notification-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
}

/* OK Button Styling */
#notification-ok-btn {
    background-color: #ff4d4d; /* Lighter red */
    color: #fff;
    padding: 10px 20px;
    font-size: 1em;
    font-weight: bold;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

#notification-ok-btn:hover {
    background-color: #d42d2d; /* Darker red on hover */
}

.health-col {
    flex-grow: 2; /* Make the health bar span across two columns */
    margin-right: 10px; /* Optional space between the elements */
    overflow: hidden;      /* Hide overflow */
    text-overflow: ellipsis; /* Add "..." to indicate overflow (if using single-line truncation) */
    white-space: nowrap;     /* Prevents the text from wrapping */
    min-width: fit-content;  /* Sets the minimum width to the button's text width */
}


// SETTINGS


/* Modal Styling */
.settings-modal {
    display: none; /* Hidden by default, will be toggled */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Slight dark background */
    justify-content: center;
    align-items: center;
}

.settings-content {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: linear-gradient(to bottom, rgba(255, 0, 0, 0.8), rgba(128, 0, 0, 0.8)); /* Red gradient */
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.6);
    color: #fff;
    font-size: 1.5em;
    font-weight: bold;
    text-align: center;
    max-width: 80%;
    z-index: 1000;
    opacity: 1;
    transition: opacity 0.3s ease, box-shadow 0.3s ease;
    border: 2px groove #ff0000; /* Red border */
    animation: glow 1.5s ease-in-out infinite; /* Glowing border animation */
}

.setting {
    margin-bottom: 20px;
}

#saveSettings {
    background-color: #ff4d4d; /* Lighter red */
    color: #fff;
    padding: 10px 20px;
    font-size: 1em;
    font-weight: bold;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}


/* Full-page overlay */
#overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
    backdrop-filter: blur(10px); /* Blur effect on the content behind */
    z-index: 999; /* Ensure it is behind the greeting box */
}

/* Notification Box Container */
#greeting-box {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: linear-gradient(to bottom, rgba(255, 0, 0, 0.8), rgba(128, 0, 0, 0.8));
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.6);
    color: #fff;
    font-size: 1.5em;
    font-weight: bold;
    text-align: center;
    max-width: 80%;
    z-index: 1000;
    opacity: 1;
    transition: opacity 0.3s ease, box-shadow 0.3s ease;
    border: 2px groove #ff0000; /* Red border */
    animation: glow 1.5s ease-in-out infinite; /* Glowing border animation */
}

/* Glowing Border Animation */
@keyframes glow {
    0% {
        box-shadow: 0 0 10px rgba(255, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.6);
    }
    50% {
        box-shadow: 0 0 20px rgba(255, 0, 0, 1), 0 0 30px rgba(255, 0, 0, 0.8);
    }
    100% {
        box-shadow: 0 0 10px rgba(255, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.6);
    }
}


/* Text input field with gradient background */
#greeting-box input[type="text"] {
    background: linear-gradient(to bottom, #010a17, #110d1c); /* Gradient from dark blue to dark purple */
    color: #ff5733; /* Demonish reddish-yellowish color for text */
    font-size: 1.2em;
    padding: 10px;
    border: 2px groove #ff5733; /* Matching red border */
    border-radius: 8px;
    width: 90%;
    max-width: 400px;
    box-sizing: border-box; /* Make padding and border part of the element's total width */
    outline: none;
    transition: all 0.3s ease;
    margin:1em;
}

/* Focus effect for the input field */
#greeting-box input[type="text"]:focus {
    background: linear-gradient(to bottom, #110d1c, #010a17); /* Inverted gradient for focus */
    color: #ffff99;
    border: 2px groove #ff5733; /* Keep the red border on focus */
    margin:1em;
    padding:0.5em;
}

/* Style for input and button */
#player-name {
    font-size: 1.2em;
    background: linear-gradient(to bottom, #110d1c, #010a17); /* Inverted gradient
    padding: 10px;
    margin: 10px 0;
    border: 2px groove #ff5733; /* Keep the red border on focus */
}

#start-game {
    font-size: 1.2em;
    padding: 10px 20px;
    background-color: #ff0000;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

#start-game:hover {
    background-color: #cc0000;
}

.show-damage {
    animation: damageAnimation 2s; /* Trigger animation */
    display: block; /* Make it visible */
}

@keyframes damageAnimation {
    0% {
        transform: translate(-50%, -20px) scale(0.5); /* Start small */
        opacity: 1;
        color: white; /* Start with bright red */
        text-shadow: 0 14px 15px rgba(0, 0, 0, 0.9);  /* Intense shadow */
    }
    30% {
        transform: translate(-50%, -30px) scale(1.8); /* Fast initial growth */
        opacity: 0.9; /* Full opacity */
        color: linear-gradient(to top, white, #ff3333); /* White flash with black gradient */
        text-shadow: 0 10px 10px rgba(0, 0, 0, 0.7);  /* Intense shadow */
    }
    50% {
        transform: translate(-50%, -40px) scale(2); /* Continue expanding */
        opacity: 0.5; /* Full opacity */
        color: linear-gradient(to top, #ff3333, #990000); /* Gradient from bright black to dark black */
        text-shadow: 0 7px 7px rgba(0, 0, 0, 0.6);  /* Intense shadow */
    }
    100% {
        transform: translate(-50%, -40px) scale(2); /* Shrink back to normal size */
        opacity: 0; /* Fade out */
        color: #660000; /* Even darker black */
        text-shadow: none; /* Remove the glow */
    }
}

.damage {
    text-align: center;
    position: absolute; /* Position relative to the parent container */
    animation: damageAnimation 2s forwards;
    font-size: 2rem; /* Large text for visibility */
    color: white; /* Make the damage text visible */
    top:-5px; /* Adjust based on where you want it to appear */
    left:65%;
    opacity: 0;
    display: block;
}

@keyframes fadeInOut {
    0% {
        opacity: 0;
        transform: translateY(0); /* Optionally, adjust the starting position */
    }
    25% {
        opacity: 1;
        transform: translateY(-10px); /* Move it up a bit to create a "pop" effect */
    }
    100% {
        opacity: 0;
        transform: translateY(-50px); /* Fade out and move up */
    }
}

// Damage animation

.damage-overlay {
    position: relative;
}

.damage-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 0, 0, 0.5); /* Semi-transparent red */
    pointer-events: none;
    z-index: 1;
    overflow: hidden;        /* Hides any overflowed content */
    border-radius: 12px;
    animation: damageFlash 0.8s forwards; /* 'forwards' keeps the final state */
}

/* Flash effect */
@keyframes damageFlash {
    0% { opacity: 1; background: rgba(255, 255, 200, 0.5); }
    50% { opacity: 1; background: rgba(255, 100, 75, 0.2); }
    75% { opacity: 1; background: rgba(255, 0, 0, 0.1); }
    95% { opacity: 1; background: rgba(255, 0, 0, 0.1); }
    100% { opacity: 1; background: rgba(255, 55, 0, 0); } /* Final transparent state */
}

/* Shake Effect on the Element */
.shake {
    animation: shake 0.4s forwards;
}

/* Fade out effect */
@keyframes fadeOut {
    0% {
        transform: translateY(0) scale(1);  /* Settle into place with normal size */
        opacity: 1;  /* Start invisible */
        background: linear-gradient(to bottom, #66888A, #335566);  /* Lighter gradient */
    }
    100% {
        opacity: 0;
        transform: translateY(0) scale(1);  /* Final position, no size change */
        filter: grayscale(50%) brightness(50%);
    }
}

@keyframes shake {
    0% { transform: translateX(15px); }
    //25% { transform: translateX(-5px); }
    //50% { transform: translateX(5px); }
    //100% { transform: translateX(0); }
}


/* Fade-out with shake effect */
.fade-out {
  //animation: fadeOut 5s normal; /* Apply both fadeOut and shake animations */
  animation-name: fadeOut;
  animation-duration: 1.0s;
}

#enemy-container {
    min-height:3em;
}


.faded {
    filter: grayscale(50%) brightness(50%);
    border: 0.2em solid black;
}

.coolDown {
    filter: grayscale(25%) brightness(75%);
    border: 0.5em groove red;
}

.trainingDelay {
    filter: brightness(75%);
    border: 0.5em groove #d700ff;
;
}


/* animation */

.sprite-container {
    / *overflow: hidden; */
    overflow: visible; /* Ensure it doesn't get clipped */
    position: relative;
}

.sprite {
    width: 192px;
    height: 192px;
    //width: 100%;
    //height: 100%;
    background-repeat: no-repeat;
    position: absolute; /* or 'relative' depending on container positioning */
    top: -60%;
    left: 0;
    z-index: 10; /* Ensure it's higher than the other image */
    transform: translateY(-35%); /* Move up half the height */
}
